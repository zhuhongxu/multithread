一、方法wait()的作用是使当前执行代码的线程进行等待，wait()方法是Object类的方法，该方法用来将当前线程置入“预
执行队列中”，并且在wait()所在的代码行处停止执行，知道接到通知或被中断为止。在调用wait()之前，线程必须获得该对
象的对象级别锁，即只能在同步方法或同步块中调用wait()方法。在执行wait()方法后，当前线程释放锁。在从wait()返回
前，线程与其他线程重新竞争获得锁。如果调用wait()方法时没有持有适当的锁，则抛出IllegalMonitorStateException，
它是RuntimeException的一个子类，因此不需要try-catch语句进行捕捉异常。
二、方法notify()也要在同步方法或同步块中调用，即在调用前，线程也必须获得该对象的对象级别锁。如果调用notify()时
没有持有适当的锁，也会抛出IllegalMonitorStateException。该方法用来通知那些可能等待该对象的对象锁的其它线程，
如果有多个线程等待，则有线程规划器随机挑选出其中一个呈wait状态的线程，对其发出通知notify，并使它等待获取该对象
的对象锁。需要说明的是，在执行notify()方法后，当前线程不会马上释放该对象锁，呈wait状态的线程也不能马上获取该对
象锁，要等到执行notify()方法的线程将它执行完，也就是退出synchronized代码块后，当前线程才会释放锁，而呈wait状
态所在的线程才可以获得该对象锁，当第一个获取了该对象锁的wait线程运行完毕以后，他会释放掉该对象锁，此时如果该对
象没有再次使用notify语句，则即便该对象已经空闲，其他wait状态等待的线程由于没有得到该线程的通知，还会继续阻塞在
wait状态，知道这个对象发出一个notify或者notifyAll。
三、简单的讲，wait使线程停止运行，而notify使停止的线程继续运行。
问题：
	①线程执行完wait()之后，会释放对象锁吗？
	②如果执行notifyAll，会如何通知其他线程，按顺序通知还是并行通知？
