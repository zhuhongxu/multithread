		(1)方法int getHoldCount()的作用是查询当前线程保持此锁定的个数，也就是调用lock()方法的次数。
		(2)方法int getQueueLength()的作用是返回正在等待获取此锁定的线程估计数，比如有五个线程，一个
线程首先执行await()方法，那么在调用getQueueLength()方法后返回值是四，说明有四个线程同事在等待lock的
释放。
		(3)方法int getWaitQueueLength(Conditioin condition)的作用是返回等待此锁定的给定条件Condition
的线程估计数，比如有五个线程，每个线程都执行了同一个condition对象的await()方法，则调用getWaitQueueLength
(Condition condition)方法时返回五。
		(4)方法boolean hasQueuedThread(Thread thread)的作用是查询指定的线程是否正在等待获取此锁定。
		(5)方法boolean hasQueuedThreads()的作用是查询是否有线程正在等待获取此锁定。
		(6)方法boolean hasWaiters(Condition condition)的作用是查询是否有线程正在等待与此锁定有关的
condition条件。
		(7)方法boolean isFair()的作用是判断是不是公平锁。
		(8)方法boolean isHeldByCurrentThread()的作用是查询当前线程是否保持此锁定。
		(9)方法boolean isLocked()的作用是查询此锁定是否由任意线程保持。